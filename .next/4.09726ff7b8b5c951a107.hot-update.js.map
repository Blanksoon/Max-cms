{"version":3,"sources":["/Users/farmoz/Desktop/MaxMuayThai/cms/Max-cms/components/maxNews/MaxNewsInsert.js"],"names":["FormItem","Form","Item","Option","Select","AutoCompleteOption","AutoComplete","TextArea","MaxNewsInsertForm","props","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","setState","loading","addNews","info","state","handleOnchangeImage","bind","imgUrl","setFieldsValue","imageUrl","value","result","Modal","title","content","onOk","getFieldDecorator","autoCompleteResult","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","message","width","input","option","children","toLowerCase","indexOf","valuePropName","getValueFromEvent","normFile","height","backgroundColor","color","fontSize","React","Component","Info","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAeA;AACA;AACA;;AAEA,IAAMA,WAAW,kDAAAC,CAAKC,IAAtB;AACA,IAAMC,SAAS,oDAAAC,CAAOD,MAAtB;AACA,IAAME,qBAAqB,0DAAAC,CAAaH,MAAxC;IACQI,Q,GAAa,mD,CAAbA,Q;;IAEFC,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAyBnBC,YAzBmB,GAyBJ,aAAK;AAClBC,QAAEC,cAAF;AACA,YAAKH,KAAL,CAAWI,IAAX,CAAgBC,uBAAhB;AAAA,0HAAwC,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AACtC,wBAAKC,QAAL,CAAc;AACZC,6BAAS;AADG,mBAAd;;AADsC,sBAIjCH,GAJiC;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAK9B,MAAKI,OAAL,CAAaH,MAAb,CAL8B;;AAAA;AAMpC;AACA,wBAAKI,IAAL;;AAPoC;AAStC,wBAAKH,QAAL,CAAc;AACZC,6BAAS;AADG,mBAAd;;AATsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxC;;AAAA;AAAA;AAAA;AAAA;AAaD,KAxCkB;;AAEjB,UAAKG,KAAL,GAAa;AACXH,eAAS;AADE,KAAb;AAGA,UAAKI,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,OAA3B;AACA,UAAKb,YAAL,GAAoB,MAAKA,YAAL,CAAkBa,IAAlB,OAApB;AACA,UAAKH,IAAL,GAAY,MAAKA,IAAL,CAAUG,IAAV,OAAZ;AAPiB;AAQlB;;;;wCAEmBC,M,EAAQ;AAC1B,UAAIA,WAAW,EAAf,EAAmB;AACjB,aAAKf,KAAL,CAAWI,IAAX,CAAgBY,cAAhB,CAA+B;AAC7BC,oBAAUF;AADmB,SAA/B;AAGD;AACD,aAAO,SAAP;AACD;;;;2IAEaG,K;;;;;;;uBAES,mDAAY,oDAAZ,wBAA2CA,KAA3C,C;;;AAAfC,sB;;;;;;;;;;;;;;;;;;2BAqBD;AACLC,MAAA,mDAAAA,CAAMT,IAAN,CAAW;AACTU,eAAO,0BADE;AAETC,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAHO;AAOTC,YAPS,kBAOF,CAAE;AAPA,OAAX;AASD;;;6BAEQ;AAAA,UACCC,iBADD,GACuB,KAAKxB,KAAL,CAAWI,IADlC,CACCoB,iBADD;AAEP;;AAFO,UAGCC,kBAHD,GAGwB,KAAKb,KAH7B,CAGCa,kBAHD;;;AAKP,UAAMC,iBAAiB;AACrBC,kBAAU;AACRC,cAAI,EAAEC,MAAM,EAAR,EADI;AAERC,cAAI,EAAED,MAAM,CAAR;AAFI,SADW;AAKrBE,oBAAY;AACVH,cAAI,EAAEC,MAAM,EAAR,EADM;AAEVC,cAAI,EAAED,MAAM,EAAR;AAFM;AALS,OAAvB;AAUA,UAAMG,qBAAqB;AACzBD,oBAAY;AACVH,cAAI;AACFC,kBAAM,EADJ;AAEFI,oBAAQ;AAFN,WADM;AAKVH,cAAI;AACFD,kBAAM,EADJ;AAEFI,oBAAQ;AAFN;AALM;AADa,OAA3B;AAYA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAC,2DAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAC,6DAAD;AAAA,cAAK,MAAM,EAAX;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF,SADF;AAME;AAAA;AAAA;AAAA,gDAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SANF;AASE;AAAC,4DAAD;AAAA,YAAM,UAAU,KAAKhC,YAArB;AAAA;AAAA;AAAA;AAAA;AACE;AAAC,oBAAD;AAAA,yBAAcyB,cAAd,IAA8B,OAAM,UAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,YAAlB,EAAgC;AAC/BU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADwB,aAAhC,EAOE,4DAAC,mDAAD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AADH,WADF;AAWE;AAAC,oBAAD;AAAA,yBAAcV,cAAd,IAA8B,OAAM,UAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,YAAlB,EAAgC;AAC/BU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADwB,aAAhC,EAOE,4DAAC,QAAD,IAAU,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAPF;AADH,WAXF;AAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAsBE;AAAA;AAAA;AAAA,kDAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAtBF;AAyBE;AAAC,oBAAD;AAAA,yBAAcV,cAAd,IAA8B,OAAM,UAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,YAAlB,EAAgC;AAC/BU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADwB,aAAhC,EAOE,4DAAC,mDAAD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AADH,WAzBF;AAmCE;AAAC,oBAAD;AAAA,yBAAcV,cAAd,IAA8B,OAAM,UAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,YAAlB,EAAgC;AAC/BU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADwB,aAAhC,EAOE,4DAAC,QAAD,IAAU,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAPF;AADH,WAnCF;AA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AA8CE;AAAA;AAAA;AAAA,kDAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WA9CF;AAiDE;AAAC,oBAAD;AAAA,yBAAcV,cAAd,IAA8B,OAAM,UAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,aAAlB,EAAiC;AAChCU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADyB,aAAjC,EAQC;AAAC,kEAAD;AAAA;AACE,gCADF;AAEE,uBAAO,EAAEC,OAAO,GAAT,EAFT;AAGE,6BAAY,kBAHd;AAIE,kCAAiB;AACjB;AACA;AACA;AAPF,kBAQE,cAAc,sBAACC,KAAD,EAAQC,MAAR;AAAA,yBACZA,OAAOvC,KAAP,CAAawC,QAAb,CACGC,WADH,GAEGC,OAFH,CAEWJ,MAAMG,WAAN,EAFX,KAEmC,CAHvB;AAAA,iBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAcE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF;AAeE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF;AAgBE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF;AAiBE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF;AAoBE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF;AAuBE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBF;AA0BE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BF;AA6BE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BF;AA8BE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BF,aARD;AADH,WAjDF;AA8FE;AAAC,oBAAD;AAAA,yBAAcf,cAAd,IAA8B,OAAM,OAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,YAAlB,EAAgC;AAC/BU,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AADwB,aAAhC,EAOE,4DAAC,wDAAD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AADH,WA9FF;AAwGE;AAAC,oBAAD;AAAA,yBAAcV,cAAd,IAA8B,OAAM,QAApC;AAAA;AAAA;AAAA;AAAA;AACGF,8BAAkB,UAAlB,EAA8B;AAC7BmB,6BAAe,UADc;AAE7BC,iCAAmB,KAAKC,QAFK;AAG7BX,qBAAO,CACL;AACEC,0BAAU,IADZ;AAEEC,yBAAS;AAFX,eADK;AAHsB,aAA9B,EASE,4DAAC,mEAAD,IAAa,aAAa,KAAKvB,mBAA/B;AAAA;AAAA;AAAA;AAAA,cATF;AADH,WAxGF;AAoHE;AAAC,oBAAD;AAAA,yBAAcmB,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAC,oEAAD;AAAA;AACE,yBAAO;AACLK,2BAAO,MADF;AAELS,4BAAQ,QAFH;AAGLC,qCAAiB,SAHZ;AAILC,2BAAO,OAJF;AAKLC,8BAAU;AALL,mBADT;AAQE,2BAAS,KAAKrC,KAAL,CAAWH,OARtB;AASE,4BAAS,QATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AApHF,SATF;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAgKD;;;;;;;;;EAlP6B,6CAAAyC,CAAMC,S;;AAoPtC,IAAMC,OAAO,kDAAA5D,CAAK6D,MAAL,GAActD,iBAAd,CAAb;eACeqD,I;AAAf;;;;;;;;;;;;0BA1PM7D,Q;0BACAG,M;0BACAE,kB;0BACEE,Q;0BAEFC,iB;0BAoPAqD,I","file":"4.09726ff7b8b5c951a107.hot-update.js","sourcesContent":["import {\n  DatePicker,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Modal,\n} from 'antd'\nimport UploadImage from '../utils/UploadImage'\nimport * as api from '../../api'\nimport Spinner from '../commons/Spinner'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\nconst AutoCompleteOption = AutoComplete.Option\nconst { TextArea } = Input\n\nclass MaxNewsInsertForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n    }\n    this.handleOnchangeImage = this.handleOnchangeImage.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.info = this.info.bind(this)\n  }\n\n  handleOnchangeImage(imgUrl) {\n    if (imgUrl !== '') {\n      this.props.form.setFieldsValue({\n        imageUrl: imgUrl,\n      })\n    }\n    return 'success'\n  }\n\n  async addNews(value) {\n    //console.log('1', value)\n    const result = await api.post(`${api.SERVER}/maxnews/add/news`, value)\n    //console.log('2', result)\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      this.setState({\n        loading: true,\n      })\n      if (!err) {\n        await this.addNews(values)\n        //console.log('3', values)\n        this.info()\n      }\n      this.setState({\n        loading: false,\n      })\n    })\n  }\n\n  info() {\n    Modal.info({\n      title: 'Success for new max news',\n      content: (\n        <div>\n          <p>you add 1 news</p>\n        </div>\n      ),\n      onOk() {},\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    //console.log('111111111111', this.props.form)\n    const { autoCompleteResult } = this.state\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    }\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 14,\n          offset: 10,\n        },\n      },\n    }\n    return (\n      <div>\n        <Row>\n          <Col span={24}>\n            <h1>Max News</h1>\n          </Col>\n        </Row>\n        <div className={'setting-row'}>\n          <h2>EN</h2>\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem {...formItemLayout} label=\"Heading:\">\n            {getFieldDecorator('heading_en', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your Heading!',\n                },\n              ],\n            })(<Input />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Article:\">\n            {getFieldDecorator('article_en', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your Article!',\n                },\n              ],\n            })(<TextArea rows={10} />)}\n          </FormItem>\n          <hr className={`hr-tag`} />\n          <div className={'setting-row'}>\n            <h2>TH</h2>\n          </div>\n          <FormItem {...formItemLayout} label=\"Heading:\">\n            {getFieldDecorator('heading_th', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please confirm your Heading!',\n                },\n              ],\n            })(<Input />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Article:\">\n            {getFieldDecorator('article_th', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please confirm your Article!',\n                },\n              ],\n            })(<TextArea rows={10} />)}\n          </FormItem>\n          <hr className={`hr-tag`} />\n          <div className={'setting-row'}>\n            <h2>BOTH</h2>\n          </div>\n          <FormItem {...formItemLayout} label=\"Program:\">\n            {getFieldDecorator('programName', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please select program!',\n                },\n              ],\n            })(\n              <Select\n                showSearch\n                style={{ width: 250 }}\n                placeholder=\"Select a program\"\n                optionFilterProp=\"children\"\n                //onChange={this.handleChange}\n                //onFocus={this.handleFocus}\n                //onBlur={this.handleBlur}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                <Option value=\"Max Muay Thai\">Max Muay Thai</Option>\n                <Option value=\"Muay Thai Battle\">Muay Thai Battle</Option>\n                <Option value=\"Muaythai Fighter\">Muaythai Fighter</Option>\n                <Option value=\"The Champion Muay Thai\">\n                  The Champion Muay Thai\n                </Option>\n                <Option value=\"Global Fight Wednesday\">\n                  Global Fight Wednesday\n                </Option>\n                <Option value=\"Global Fight Thursday\">\n                  Global Fight Thursday\n                </Option>\n                <Option value=\"MUAY THAI FIGHTER Monday\">\n                  MUAY THAI FIGHTER Monday\n                </Option>\n                <Option value=\"Octa Fight Tuesday\">Octa Fight Tuesday</Option>\n                <Option value=\"Max Sunday Afternoon\">\n                  Max Sunday Afternoon\n                </Option>\n              </Select>\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Date:\">\n            {getFieldDecorator('createDate', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter Date!',\n                },\n              ],\n            })(<DatePicker />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Image:\">\n            {getFieldDecorator('imageUrl', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n              rules: [\n                {\n                  required: true,\n                  message: 'Please upload Image!',\n                },\n              ],\n            })(<UploadImage onChangeImg={this.handleOnchangeImage} />)}\n          </FormItem>\n          <FormItem {...tailFormItemLayout}>\n            <div>\n              <Button\n                style={{\n                  width: '9rem',\n                  height: '2.5rem',\n                  backgroundColor: '#4caf4f',\n                  color: 'white',\n                  fontSize: '1.2rem',\n                }}\n                loading={this.state.loading}\n                htmlType=\"submit\"\n              >\n                save\n              </Button>\n            </div>\n          </FormItem>\n        </Form>\n        <style jsx>{`\n          .setting-row {\n            margin-left: 1rem;\n          }\n          .hr-tag {\n            margin-bottom: 1.5rem;\n          }\n          .submit-button {\n            width: 8rem;\n            height: 2rem;\n            background-color: green;\n            color: white;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\nconst Info = Form.create()(MaxNewsInsertForm)\nexport default Info\n\n\n\n// WEBPACK FOOTER //\n// ./components/maxNews/MaxNewsInsert.js"],"sourceRoot":""}